#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// 'dithered2', 128x64px
const unsigned char epd_bitmap_dithered2 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xfe, 0xdb, 0x6d, 0xb6, 0xdb, 0x6d, 0xb6, 0xdb, 0x5a, 0xaa, 
	0xdb, 0x6d, 0xb6, 0xfd, 0xff, 0xab, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe8, 0x94, 0xaf, 0x55, 0xb5, 0x55, 0x55, 0x56, 0xd5, 0x57, 0xeb, 0x6b, 
	0xdd, 0xde, 0xff, 0xdf, 0x52, 0x40, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xbf, 0xbe, 
	0xf7, 0x7b, 0xef, 0x7b, 0xa5, 0x34, 0x93, 0xbb, 0x5b, 0xdd, 0xdd, 0xed, 0x6f, 0x77, 0xed, 0xf7, 
	0xbd, 0xff, 0xff, 0xfe, 0x92, 0x88, 0xaa, 0xef, 0xfe, 0xf7, 0x77, 0x7f, 0xfb, 0xde, 0xbe, 0xdd, 
	0xef, 0xdf, 0xbf, 0xf5, 0x54, 0x54, 0x53, 0xfd, 0xb7, 0xbf, 0xff, 0xdb, 0x5e, 0xfb, 0xf7, 0xb7, 
	0xbd, 0xfb, 0xfd, 0xdd, 0x2a, 0xa2, 0xa4, 0xdf, 0xfd, 0xed, 0xb5, 0xff, 0xf7, 0xdf, 0x7d, 0xfd, 
	0xf7, 0xbf, 0xff, 0xfa, 0xaa, 0xaa, 0x52, 0xf5, 0xaf, 0xbf, 0xff, 0x6d, 0xbe, 0xfb, 0xd7, 0x57, 
	0xdf, 0xff, 0xf7, 0x6a, 0xad, 0xdb, 0x29, 0x7f, 0xfd, 0xf5, 0x6f, 0xb5, 0x4b, 0xbe, 0xfd, 0xfd, 
	0xff, 0xfe, 0xdf, 0xea, 0xb7, 0x7d, 0x44, 0xad, 0x74, 0xbb, 0xb0, 0xaa, 0x25, 0xeb, 0xdf, 0xb7, 
	0xff, 0xf7, 0xfd, 0x6a, 0xdd, 0xeb, 0xa8, 0xbf, 0xdb, 0x7e, 0xde, 0xd5, 0x40, 0xbf, 0x76, 0xfd, 
	0xfd, 0xbf, 0xb7, 0xdb, 0xbf, 0xde, 0x92, 0x75, 0x6f, 0xef, 0xeb, 0xbf, 0x44, 0x4d, 0xff, 0xaf, 
	0xdf, 0xf6, 0xed, 0xad, 0xfe, 0xa2, 0xc8, 0xaf, 0xbd, 0xfd, 0xbf, 0xeb, 0xf0, 0x07, 0xaa, 0xfb, 
	0xf6, 0xdd, 0xbb, 0xeb, 0x75, 0x08, 0x25, 0x55, 0x77, 0x77, 0xfb, 0x7e, 0xbc, 0x09, 0xff, 0xde, 
	0xdf, 0x6b, 0x6e, 0xbd, 0xe8, 0x00, 0x92, 0xb6, 0xdd, 0xdd, 0x55, 0xef, 0xee, 0x80, 0xad, 0xf7, 
	0xfa, 0xdd, 0xdb, 0xd7, 0xa0, 0x4a, 0x49, 0x5b, 0xf7, 0xf6, 0xbd, 0xbb, 0xfb, 0x05, 0x77, 0x5d, 
	0xaf, 0x6b, 0x7f, 0x5d, 0xc9, 0x36, 0x95, 0x6e, 0xad, 0x5e, 0x95, 0xfe, 0xbe, 0xc0, 0x1d, 0xf7, 
	0xf5, 0xbe, 0xeb, 0xef, 0x00, 0xd8, 0x2a, 0xbb, 0xf7, 0xfa, 0xe4, 0xb7, 0xeb, 0xa1, 0x6b, 0xbd, 
	0x56, 0xd7, 0xbe, 0xba, 0x27, 0x62, 0x45, 0xde, 0xad, 0x57, 0x2a, 0xed, 0x7e, 0xe8, 0x2d, 0xef, 
	0xbb, 0x7f, 0xed, 0xdc, 0x89, 0xa0, 0x15, 0x2b, 0xf6, 0xb4, 0x94, 0x7f, 0xab, 0xa2, 0x4b, 0x7b, 
	0xd7, 0xfe, 0xfb, 0x68, 0x26, 0x95, 0x22, 0xad, 0x5b, 0x52, 0x21, 0x55, 0x7e, 0xd0, 0x15, 0xae, 
	0xff, 0xff, 0xdf, 0xb2, 0x9a, 0x80, 0x48, 0x93, 0x6d, 0xaa, 0x14, 0xbd, 0xab, 0x54, 0x82, 0x7b, 
	0xbd, 0xfb, 0xb5, 0xc0, 0x55, 0x2a, 0x16, 0x4a, 0xaa, 0xe9, 0x42, 0x6b, 0x6d, 0x50, 0x29, 0x5f, 
	0xd6, 0x9f, 0xee, 0xaa, 0xaa, 0x00, 0xaf, 0x25, 0xdf, 0x69, 0x14, 0xb6, 0xb5, 0x40, 0x84, 0xaa, 
	0x6a, 0xd5, 0x5a, 0x81, 0x2a, 0x49, 0x35, 0x27, 0x65, 0xf4, 0x8a, 0x5a, 0xd5, 0x54, 0x12, 0x2f, 
	0xbf, 0x6f, 0x7c, 0x2a, 0xa8, 0x00, 0xad, 0x29, 0xbe, 0xd9, 0x29, 0x55, 0x55, 0x50, 0x01, 0x55, 
	0xd7, 0xf5, 0xaa, 0x89, 0x54, 0x94, 0x55, 0x22, 0xdb, 0xf4, 0xa9, 0x56, 0xaa, 0x80, 0xa8, 0x6f, 
	0xbf, 0xae, 0xb0, 0x52, 0xa8, 0x02, 0x0a, 0x91, 0x5f, 0xbe, 0xaa, 0xab, 0x55, 0x50, 0x05, 0x1b, 
	0xfd, 0xf7, 0xea, 0x09, 0x44, 0x08, 0xa5, 0x08, 0xaf, 0xff, 0xf5, 0x5a, 0xa9, 0x02, 0x20, 0x5d, 
	0xff, 0xdd, 0x69, 0x54, 0xa8, 0x80, 0x10, 0x54, 0x5a, 0xf5, 0xb5, 0x55, 0x55, 0x50, 0x09, 0x0b, 
	0xef, 0xaf, 0xbc, 0x02, 0x90, 0x12, 0x46, 0x81, 0x2d, 0xae, 0xaa, 0xaa, 0xaa, 0x80, 0x00, 0x9f, 
	0xfe, 0xf5, 0xdf, 0x55, 0x48, 0x00, 0x09, 0x28, 0x55, 0x21, 0x25, 0x55, 0x54, 0x50, 0x04, 0x4a, 
	0xff, 0xff, 0xff, 0x24, 0x24, 0x49, 0x22, 0x09, 0x08, 0x94, 0x4a, 0xaa, 0xab, 0x00, 0x40, 0xbf, 
	0x4a, 0xaf, 0x77, 0x92, 0xa0, 0x00, 0x08, 0x40, 0x25, 0x01, 0x12, 0xb5, 0x50, 0xa0, 0x00, 0x55, 
	0xb5, 0xf5, 0xaf, 0xc9, 0x48, 0x00, 0xa2, 0x10, 0x10, 0x54, 0x09, 0x4a, 0xad, 0x48, 0x09, 0x3e, 
	0xef, 0xfa, 0xda, 0xd4, 0x92, 0x04, 0x08, 0x21, 0x45, 0x01, 0x44, 0xaa, 0x52, 0x00, 0x80, 0x2b, 
	0xf5, 0xd7, 0x6f, 0x62, 0x44, 0x20, 0x25, 0x08, 0x90, 0xa8, 0x10, 0x52, 0xa9, 0x50, 0x00, 0x5e, 
	0xbd, 0xfa, 0xb5, 0xf5, 0x20, 0x80, 0x10, 0xa2, 0x4a, 0x45, 0x45, 0x4a, 0x95, 0x00, 0x00, 0x37, 
	0xfb, 0x6f, 0xdb, 0xb2, 0x94, 0x00, 0x85, 0x01, 0x25, 0x28, 0x90, 0x54, 0x48, 0xa0, 0x02, 0xad, 
	0xaf, 0xf5, 0x56, 0xf8, 0x49, 0x00, 0x10, 0xa4, 0x92, 0x92, 0x04, 0x4a, 0xa5, 0x02, 0x08, 0x3b, 
	0xfe, 0xbb, 0x6f, 0xfa, 0x22, 0x00, 0x04, 0x0a, 0x54, 0x48, 0x28, 0xa1, 0x29, 0x48, 0x00, 0x5e, 
	0x2b, 0xed, 0xb5, 0x7c, 0x88, 0xa2, 0x02, 0xa1, 0x4a, 0xa2, 0x80, 0x14, 0x92, 0x00, 0x03, 0x6b, 
	0xd5, 0x5e, 0xdb, 0xbc, 0x22, 0x08, 0x20, 0x14, 0x91, 0x10, 0x14, 0xa5, 0x24, 0x80, 0x05, 0xbe, 
	0x56, 0xf7, 0xb6, 0xf7, 0x08, 0x90, 0x0a, 0xa2, 0x4a, 0x4a, 0x40, 0x48, 0x88, 0x20, 0x12, 0xeb, 
	0xb5, 0x5b, 0xdb, 0xbe, 0x82, 0x00, 0x00, 0x09, 0x24, 0xa0, 0x12, 0x22, 0x22, 0x80, 0x03, 0xbd, 
	0xd6, 0xad, 0xb5, 0xdf, 0x48, 0x4a, 0x89, 0x22, 0x12, 0x15, 0x48, 0x88, 0x88, 0x00, 0x06, 0xef, 
	0x6b, 0x6b, 0x6e, 0xb7, 0x60, 0x00, 0x00, 0x08, 0xa4, 0xa0, 0x20, 0x52, 0x22, 0x00, 0x0b, 0xb5, 
	0xba, 0xad, 0xb5, 0xdd, 0xb0, 0x00, 0x54, 0x02, 0x11, 0x15, 0x45, 0x04, 0x90, 0x00, 0x6e, 0xee, 
	0xd6, 0xd5, 0x5a, 0xb7, 0x5e, 0x81, 0x2a, 0x40, 0xa4, 0xa2, 0x10, 0xa0, 0x40, 0x00, 0x37, 0x7b, 
	0xbb, 0x76, 0xed, 0x7b, 0xd5, 0x54, 0x57, 0x54, 0x02, 0x14, 0xa4, 0x0a, 0x00, 0x01, 0xdb, 0xae, 
	0xd5, 0xab, 0x2a, 0xd6, 0xaa, 0xaa, 0xaf, 0x2e, 0xa9, 0x42, 0x02, 0x20, 0x00, 0x04, 0xed, 0xf7, 
	0xbe, 0xdd, 0xd5, 0x6d, 0xe5, 0x55, 0x5e, 0xae, 0x44, 0x28, 0x48, 0x00, 0x00, 0x0b, 0x7e, 0xba, 
	0xf7, 0x76, 0xbb, 0x5b, 0x55, 0x55, 0x3e, 0x5b, 0xa2, 0x93, 0x80, 0x00, 0x04, 0x2b, 0xab, 0xd7, 
	0xfd, 0xdb, 0x6d, 0x6d, 0xf5, 0x54, 0xb6, 0xaf, 0xf9, 0x44, 0xf4, 0x40, 0x00, 0xbd, 0xfd, 0x7a, 
	0xdf, 0x6d, 0xd6, 0xb6, 0xaa, 0x52, 0x3e, 0x5d, 0x6f, 0x69, 0xdf, 0x90, 0x02, 0xee, 0xaf, 0xaf, 
	0xfb, 0xf7, 0x7a, 0x9b, 0x5c, 0x88, 0x92, 0xb7, 0xfb, 0xf7, 0x75, 0xee, 0xbf, 0xb7, 0xf5, 0x75, 
	0xae, 0xad, 0xab, 0x55, 0xb6, 0x54, 0x54, 0xae, 0xae, 0xbf, 0xdf, 0x7b, 0xda, 0xfa, 0xaf, 0xde, 
	0xb5, 0xb6, 0xad, 0x56, 0xdb, 0x48, 0x91, 0x5b, 0xfb, 0xd5, 0x75, 0xae, 0xef, 0x57, 0xfa, 0xb5, 
	0xaa, 0xd5, 0x55, 0x55, 0x55, 0xa0, 0x4a, 0xbe, 0xae, 0xff, 0xdf, 0xfb, 0x7b, 0xfd, 0x57, 0xdf, 
	0xb6, 0xaa, 0xb5, 0x56, 0xda, 0xa0, 0x21, 0x6b, 0xfb, 0x55, 0x75, 0x5d, 0xd6, 0xab, 0xed, 0x6a, 
	0xdb, 0x5b, 0x55, 0xab, 0x6b, 0x5d, 0x0a, 0xbe, 0xaf, 0xff, 0xbf, 0xef, 0x7d, 0xfe, 0xbb, 0xbb, 
	0x6d, 0xad, 0x6a, 0xaa, 0xad, 0x6a, 0xaa, 0xeb, 0xfa, 0xaa, 0xd5, 0x5a, 0xd7, 0x55, 0xd6, 0xd6
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1040)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_dithered2
};



void setup()   
{                
  // initialize with the I2C addr 0x3C
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);  

  // Clear the buffer.
 
//  Invert Display
  //display.invertDisplay(1);
}

void loop() {
  display.clearDisplay();

  // Display bitmap
  display.drawBitmap(0, 0, epd_bitmap_dithered2 , 128,64,1);
  display.display();
  delay(200);
}
